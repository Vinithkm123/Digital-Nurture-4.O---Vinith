## 1. greet-service – Simple Microservice
pom.xml dependencies:
xml
Copy
Edit
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-web</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
</dependency>
application.properties
properties
Copy
Edit
spring.application.name=greet-service
server.port=8081

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
GreetController.java
java
Copy
Edit
@RestController
public class GreetController {
    @GetMapping("/greet")
    public String greet() {
        return "Hello World";
    }
}
GreetServiceApplication.java
java
Copy
Edit
@SpringBootApplication
@EnableDiscoveryClient
public class GreetServiceApplication {
    public static void main(String[] args) {
        SpringApplication.run(GreetServiceApplication.class, args);
    }
}

2. eureka-discovery-server
pom.xml dependencies:
xml
Copy
Edit
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
</dependency>
application.properties
properties
Copy
Edit
spring.application.name=eureka-discovery-server
server.port=8761

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
EurekaDiscoveryServerApplication.java
java
Copy
Edit
@SpringBootApplication
@EnableEurekaServer
public class EurekaDiscoveryServerApplication {
    public static void main(String[] args) {
        SpringApplication.run(EurekaDiscoveryServerApplication.class, args);
    }
}

3. api-gateway – Spring Cloud Gateway
pom.xml dependencies:
xml
Copy
Edit
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-gateway</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
</dependency>
application.properties
properties
Copy
Edit
spring.application.name=api-gateway
server.port=9090

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
Global Logging Filter – LogFilter.java
java
Copy
Edit
@Component
public class LogFilter implements GlobalFilter {

    private static final Logger logger = LoggerFactory.getLogger(LogFilter.class);

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
        logger.info("Request Path: {}", exchange.getRequest().getPath());
        return chain.filter(exchange);
    }
}
ApiGatewayApplication.java
java
Copy
Edit
@SpringBootApplication
@EnableDiscoveryClient
public class ApiGatewayApplication {
    public static void main(String[] args) {
        SpringApplication.run(ApiGatewayApplication.class, args);
    }
}

Testing the Setup
Start services in this order:

eureka-discovery-server

greet-service

api-gateway

Open browser and visit:

Eureka Dashboard: http://localhost:8761

Gateway Access to greet-service:

bash
Copy
Edit
http://localhost:9090/greet-service/greet
Console log should show:

bash
Copy
Edit
Request Path: /greet-service/greet
