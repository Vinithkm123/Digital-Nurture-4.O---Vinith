 1. What are React Components?
React Components are reusable building blocks of a React application.
Each component controls a small part of the UI (like a button, header, or form).
Components help in breaking down a big UI into smaller, manageable pieces.
Example:
In a website, Header, Footer, Sidebar, and Main Content can each be separate React components.

2. Difference Between Components and JavaScript Functions
Aspect	React Components	JavaScript Functions
Purpose	Build UI parts (like buttons, pages)	Perform general programming tasks
Output	Returns JSX (HTML-like code)	Returns values (numbers, strings, etc.)
Usage	Render UI elements	Perform calculations, logic, etc.
Lifecycle	Components have lifecycle methods	Functions don’t have lifecycle methods

3. Types of React Components
Class Components
Use ES6 classes.

Support lifecycle methods (componentDidMount, etc.).

Use render() method to return JSX.

Example:

javascript
Copy
Edit
import React, { Component } from 'react';

class Welcome extends Component {
  render() {
    return <h1>Hello from Class Component</h1>;
  }
}

Function Components
Use simple JavaScript functions.

Modern way of writing components.

Use hooks (useState, useEffect) for state and lifecycle logic.

Example:

javascript
Copy
Edit
import React from 'react';

function Welcome() {
  return <h1>Hello from Function Component</h1>;
}
4. What is a Component Constructor?
Constructor is a special method inside class components.

It’s used to initialize state and bind methods.

Called automatically when the component is created.

Example:

javascript
Copy
Edit
class MyComponent extends React.Component {
  constructor(props) {
    super(props);  // Must call super(props)
    this.state = { message: 'Hello' };
  }
}
5. What is the render() Method?
render() is a required method inside every class component.

It returns the JSX (HTML-like code) that defines what should appear on the screen.

Example:

javascript
Copy
Edit
class MyComponent extends React.Component {
  render() {
    return <p>This is displayed using render method.</p>;
  }
}

##Create React App
bash
Copy
Edit
npx create-react-app StudentApp

Create Folder for Components
In src folder, create a new folder named:

nginx
Copy
Edit
Components

Create Components
A. Home Component (Home.js)
Path: src/Components/Home.js

javascript
Copy
Edit
import React, { Component } from 'react';

class Home extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <div>
        <h2>Welcome to the Home page of Student Management Portal</h2>
      </div>
    );
  }
}

export default Home;
B. About Component (About.js)
Path: src/Components/About.js

javascript
Copy
Edit
import React, { Component } from 'react';

class About extends Component {
  render() {
    return (
      <div>
        <h2>Welcome to the About page of the Student Management Portal</h2>
      </div>
    );
  }
}

export default About;
C. Contact Component (Contact.js)
Path: src/Components/Contact.js

javascript
Copy
Edit
import React, { Component } from 'react';

class Contact extends Component {
  render() {
    return (
      <div>
        <h2>Welcome to the Contact page of the Student Management Portal</h2>
      </div>
    );
  }
}

export default Contact;

Modify App.js to Render Components
Path: src/App.js

javascript
Copy
Edit
import React from 'react';
import Home from './Components/Home';
import About from './Components/About';
import Contact from './Components/Contact';

function App() {
  return (
    <div>
      <Home />
      <About />
      <Contact />
    </div>
  );
}

export default App;

Run the Project
In your terminal:

bash
Copy
Edit
npm start

Open Browser
Go to:

arduino
Copy
Edit
http://localhost:3000
