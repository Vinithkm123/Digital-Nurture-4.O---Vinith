##  Exercise 9: Implementing the Command Pattern

// Step 2: Command Interface
interface Command {
    void execute();
}

// Step 5: Receiver Class - Light
class Light {
    public void turnOn() {
        System.out.println("Light is ON");
    }

    public void turnOff() {
        System.out.println("Light is OFF");
    }
}

// Step 3: Concrete Command - Turn Light ON
class LightOnCommand implements Command {
    private Light light;

    public LightOnCommand(Light light) {
        this.light = light;
    }

    @Override
    public void execute() {
        light.turnOn();
    }
}

// Step 3: Concrete Command - Turn Light OFF
class LightOffCommand implements Command {
    private Light light;

    public LightOffCommand(Light light) {
        this.light = light;
    }

    @Override
    public void execute() {
        light.turnOff();
    }
}

// Step 4: Invoker Class - Remote Control
class RemoteControl {
    private Command command;

    public void setCommand(Command command) {
        this.command = command;
    }

    public void pressButton() {
        if (command != null) {
            command.execute();
        } else {
            System.out.println("No command set.");
        }
    }
}

// Step 6: Test Class with main()
public class CommandPatternExample {
    public static void main(String[] args) {
        // Create receiver
        Light livingRoomLight = new Light();

        // Create concrete commands
        Command lightOn = new LightOnCommand(livingRoomLight);
        Command lightOff = new LightOffCommand(livingRoomLight);

        // Create invoker
        RemoteControl remote = new RemoteControl();

        // Issue ON command
        System.out.println(">>> Turning ON the light:");
        remote.setCommand(lightOn);
        remote.pressButton();

        // Issue OFF command
        System.out.println(">>> Turning OFF the light:");
        remote.setCommand(lightOff);
        remote.pressButton();

        // No command set
        System.out.println(">>> Trying with no command:");
        remote.setCommand(null);
        remote.pressButton();
    }
}

Output :

>>> Turning ON the light:
Light is ON
>>> Turning OFF the light:
Light is OFF
>>> Trying with no command:
No command set.

