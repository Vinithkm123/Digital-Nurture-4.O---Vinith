##  Exercise 5: Decorator Pattern â€” Notification System
public class DecoratorPatternExample {

    // Step 2: Component Interface
    interface Notifier {
        void send(String message);
    }

    // Step 3: Concrete Component - Email Notifier
    static class EmailNotifier implements Notifier {
        public void send(String message) {
            System.out.println("Sending Email: " + message);
        }
    }

    // Step 4: Abstract Decorator
    static abstract class NotifierDecorator implements Notifier {
        protected Notifier wrappee;

        public NotifierDecorator(Notifier notifier) {
            this.wrappee = notifier;
        }

        public void send(String message) {
            wrappee.send(message);
        }
    }

    // Step 4: Concrete Decorator - SMS Notifier
    static class SMSNotifierDecorator extends NotifierDecorator {
        public SMSNotifierDecorator(Notifier notifier) {
            super(notifier);
        }

        public void send(String message) {
            super.send(message);
            System.out.println("Sending SMS: " + message);
        }
    }

    // Step 4: Concrete Decorator - Slack Notifier
    static class SlackNotifierDecorator extends NotifierDecorator {
        public SlackNotifierDecorator(Notifier notifier) {
            super(notifier);
        }

        public void send(String message) {
            super.send(message);
            System.out.println("Sending Slack Message: " + message);
        }
    }

    // Step 5: Test the Decorator Pattern
    public static void main(String[] args) {
        System.out.println("---- Basic Email Notification ----");
        Notifier emailNotifier = new EmailNotifier();
        emailNotifier.send("Welcome to our platform!");

        System.out.println("\n---- Email + SMS Notification ----");
        Notifier emailAndSMS = new SMSNotifierDecorator(new EmailNotifier());
        emailAndSMS.send("Your order has been shipped.");

        System.out.println("\n---- Email + SMS + Slack Notification ----");
        Notifier fullNotifier = new SlackNotifierDecorator(
                                    new SMSNotifierDecorator(
                                        new EmailNotifier()));
        fullNotifier.send("System outage alert!");
    }
}

Output :
---- Basic Email Notification ----
Sending Email: Welcome to our platform!

---- Email + SMS Notification ----
Sending Email: Your order has been shipped.
Sending SMS: Your order has been shipped.

---- Email + SMS + Slack Notification ----
Sending Email: System outage alert!
Sending SMS: System outage alert!
Sending Slack Message: System outage alert!
