##  E-commerce Platform Search Function

import java.util.Arrays;
import java.util.Comparator;

// Product class definition
class Product {
    int productId;
    String productName;
    String category;

    public Product(int productId, String productName, String category) {
        this.productId = productId;
        this.productName = productName;
        this.category = category;
    }

    @Override
    public String toString() {
        return "ID: " + productId + ", Name: " + productName + ", Category: " + category;
    }
}

// ProductSearch class with search and sort methods
class ProductSearch {

    // Linear Search by productName
    public static int linearSearch(Product[] products, String targetName) {
        for (int i = 0; i < products.length; i++) {
            if (products[i].productName.equalsIgnoreCase(targetName)) {
                return i; // found at index i
            }
        }
        return -1; // not found
    }

    // Binary Search by productName (requires sorted array)
    public static int binarySearch(Product[] products, String targetName) {
        int left = 0, right = products.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int cmp = products[mid].productName.compareToIgnoreCase(targetName);
            if (cmp == 0) return mid;
            if (cmp < 0) left = mid + 1;
            else right = mid - 1;
        }
        return -1; // not found
    }

    // Sort the product array by productName
    public static void sortByName(Product[] products) {
        Arrays.sort(products, Comparator.comparing(p -> p.productName.toLowerCase()));
    }
}

// Main class to demonstrate the search functions
public class Main {
    public static void main(String[] args) {
        Product[] products = {
            new Product(101, "Laptop", "Electronics"),
            new Product(102, "Shirt", "Fashion"),
            new Product(103, "Book", "Education"),
            new Product(104, "Mobile", "Electronics"),
            new Product(105, "Shoes", "Fashion")
        };

        // ---------- Linear Search ----------
        System.out.println("=== Linear Search ===");
        String targetLinear = "Book";
        int linearIndex = ProductSearch.linearSearch(products, targetLinear);
        if (linearIndex != -1) {
            System.out.println("'" + targetLinear + "' found at index: " + linearIndex);
            System.out.println(products[linearIndex]);
        } else {
            System.out.println("'" + targetLinear + "' not found.");
        }

        // ---------- Binary Search ----------
        System.out.println("\n=== Binary Search ===");
        // Sort products before performing binary search
        ProductSearch.sortByName(products);

        String targetBinary = "Book";
        int binaryIndex = ProductSearch.binarySearch(products, targetBinary);
        if (binaryIndex != -1) {
            System.out.println("'" + targetBinary + "' found at index: " + binaryIndex);
            System.out.println(products[binaryIndex]);
        } else {
            System.out.println("'" + targetBinary + "' not found.");
        }
    }
}

output:
=== Linear Search ===
'Book' found at index: 2
ID: 103, Name: Book, Category: Education

=== Binary Search ===
'Book' found at index: 0
ID: 103, Name: Book, Category: Education
